namespace Solid.InterfaceSegregation;

/// <summary>
/// Принцип разделения интерфейсов говорит нам о том, что мы должны проектировать классы таким образом,
/// чтобы классы и методы, в которых они вызываются, использовали их по максимому, чтобы в интерфейсе не оставалось неиспользуемых элементов.
/// Также чтобы они были не раздутыми.
/// </summary>
public interface IMessenger
{
    string Subject { get; set; }

    string From { get; set; }

    string To { get; set; }

    // В данном случае поле Text является излишним, потому что оно будет использоваться не во всех реализациях интерфеса.
    // Например, в видео сообщениях у нас не тектовый контент. Поэтому лучше вынести это свойство в отдельный интерфейс. ITextContent и IStreamContent
    // public string Text { get; set; }

    void Send();
}