-- Здесь мы рассмотрим основые CRUD (create/read/update/delete) комманды

create table Products(
    Id int not null identity(1, 1) primary key,
    Name nvarchar(100) null,
    Article nvarchar(10) not null
)

-- 1. Чтобы создать запись используем insert into
insert into Products -- после названия таблицы мы можем в скобка ещё указать те колонки, которым хотим указать значения,
                     -- если мы не укажем, то на придётся указывать значения для все колонок (в данном случае кроме Id, потому что у него есть identity) 
    values ('Картоха', '1112');
-- можно указывать несколько записей за раз
insert into Products
values ('Картоха', '1112'),
       ('Макарохи', '1234'),
       ('Рис', '1122');
    
-- 2. Чтобы обновить записи используем update
update Products set Name = 'Редька'; -- такой командой мы заменим все имена в таблицы на 'Редька'

-- 3. Чтобы удалить записи из таблицы используем delete
delete from Products -- здесь мы удалим все записи из таблицы

-- 4. Выборка данных
-- выбрать все записи
select * 
from Products;

-- условная выборка
select *
from Products
where Article = '111'; -- в SQL есть логические операторы - AND, OR, NOT - которые можно использовать в фильтрации данных

select *
from Products
where not Article = '111' or Name = 'Картоха';

-- с помощью слова as можно изменить имя выходной колонки или даже таблицы
select Article as ProductArticle
from Products as p
where p.Article = '1111';

-- условия можно использовать для более осмысленного использования update и delete
update Products set Name = 'Молоко' where Article = '1111';
delete from Products where Article = '1111';

-- существует небольшая особенность при фильрации данных по значению NULL
-- в этом случае мы не можем использовать знак '='
-- вместо него нужно использовать IS
select *
from Products
where Name is not null;

select *
from Products
where Name is null;

-- существует ещё несколько операторов фильрации, что придаёшь sql запросам большей гибкости:
-- IN - оператор работает по принципу contains,
-- принимает в себя набор значений и сравнивает значение колонки с этим набором
select *
from Products
where Name in ('Картоха', 'Морковка');

-- Between - оператор возвращает всё, что входит в диапазон между левым и правым значениями
-- работает со строками, датами и числами
select *
from Products
where Id between 2 and 10;

-- like - этот оператор работает только со строками и принимает в качестве парамера шаблон поиска
select *
from Products
where Article like '%11%'; -- в данном случае знак '%' используется для укакзания любой строки любой длины слева и справа
                           -- данный шаблон ищет все строки, в которых Article содержит '11'
                           
-- существует и другие спец символы для определения шалона поиска
-- например символ '_' соответствует любому одиночному символу
-- таким образом можно выстраивать довольно гибкие критерии фильтрации данных

-- Чтобы отсортировать данные используем order by
select *
from Products
order by Name, Article asc;
-- слово после названия колонки указывает как будут сортироваться данные:
-- по возрастанию (asc) или по убыванию (desc)
-- по умолчанию используется asc, поэтому его указывать необязательно.
-- сортировать можно нескольким колонкам.

select *
from Products
order by Name desc, Article asc;

-- order by должен быть всегда в конце запроса